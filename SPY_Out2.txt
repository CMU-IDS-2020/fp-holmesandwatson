(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_AAPL.py
(122.25, 15.0, 3.0, datetime.datetime(2020, 12, 6, 22, 45, 24, 25175))
(122.25, 16.0, 3.0, datetime.datetime(2020, 12, 6, 22, 46, 24, 993767))
(122.25, 16.0, 3.0, datetime.datetime(2020, 12, 6, 22, 47, 25, 777385))
Loop Complete
[(122.25, 15.0, 3.0, datetime.datetime(2020, 12, 6, 22, 45, 24, 25175)), (122.25, 16.0, 3.0, datetime.datetime(2020, 12, 6, 22, 46, 24, 993767)), (122.25, 16.0, 3.0, datetime.datetime(2020, 12, 6, 22, 47, 25, 777385))]


Positive tweets:
@Stalingrad_Poor Obey your overlords!  Buy ten shares of #aapl and say five Hail Mary’s outside your shuttered plac… https://t.co/U9DtG1hDEs
Weird looking iPhone Tim. 

$AAPL $TSLA https://t.co/RxWXpvG3G2
AIM (a fund) owned almost 6% of $AAPL in 2001. Not sure where they are today but need the right capital base and th… https://t.co/ZDpog6enjg


Negative tweets:
@Stalingrad_Poor Obey your overlords!  Buy ten shares of #aapl and say five Hail Mary’s outside your shuttered plac… https://t.co/U9DtG1hDEs
Weird looking iPhone Tim. 

$AAPL $TSLA https://t.co/RxWXpvG3G2
AIM (a fund) owned almost 6% of $AAPL in 2001. Not sure where they are today but need the right capital base and th… https://t.co/ZDpog6enjg
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py 
Mining Tweets
Traceback (most recent call last):
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 2646, in get_loc
    return self._engine.get_loc(key)
  File "pandas/_libs/index.pyx", line 111, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 138, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "FP_TweetMiner_BTC.py", line 180, in <module>
    main()
  File "FP_TweetMiner_BTC.py", line 119, in main
    print(BTC[0])
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py", line 2800, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 2648, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas/_libs/index.pyx", line 111, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 138, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 0
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py 
Mining Tweets
<bound method NDFrame.head of        Symbol  ... Circulating Supply
0     BTC-USD  ...       1.856400e+07
1     ETH-USD  ...       1.137280e+08
2     XRP-USD  ...       4.533400e+10
3    USDT-USD  ...       1.968200e+10
4     LTC-USD  ...       6.603200e+07
..        ...  ...                ...
95    CVC-USD  ...       6.700000e+08
96  STORJ-USD  ...       2.002520e+08
97   IOTX-USD  ...       9.644000e+09
98    KMD-USD  ...       1.230330e+08
99  STEEM-USD  ...       3.879330e+08

[100 rows x 10 columns]>
^Z
zsh: suspended  python FP_TweetMiner_BTC.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py
Mining Tweets
Traceback (most recent call last):
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 2646, in get_loc
    return self._engine.get_loc(key)
  File "pandas/_libs/index.pyx", line 111, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 138, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'Price'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "FP_TweetMiner_BTC.py", line 181, in <module>
    main()
  File "FP_TweetMiner_BTC.py", line 119, in main
    btcp = BTC["Price"].tolist()
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py", line 2800, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py", line 2648, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas/_libs/index.pyx", line 111, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 138, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'Price'
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py
Mining Tweets
19281.06
^Z
zsh: suspended  python FP_TweetMiner_BTC.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py
Mining Tweets
^Z
zsh: suspended  python FP_TweetMiner_BTC.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py
Mining Tweets
(19285.05, 33.673469387755105, 8.16326530612245, datetime.datetime(2020, 12, 6, 22, 58, 12, 746840))
Mining Tweets
(19285.51, 32.98969072164948, 9.278350515463918, datetime.datetime(2020, 12, 6, 22, 59, 14, 662260))
^Z
zsh: suspended  python FP_TweetMiner_BTC.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_BTC.py
(19287.13, 34.02061855670103, 11.34020618556701, datetime.datetime(2020, 12, 6, 23, 0, 17, 753939))
^Z
zsh: suspended  python FP_TweetMiner_BTC.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_SPY.py 
(369.8500061035156, 32.0, 11.0, datetime.datetime(2020, 12, 6, 23, 1, 27, 574524))
(369.8500061035156, 25.0, 12.5, datetime.datetime(2020, 12, 6, 23, 2, 28, 615608))
^Z
zsh: suspended  python FP_TweetMiner_SPY.py
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_SPY.py
(368.875, 30.0, 12.0, datetime.datetime(2020, 12, 7, 9, 52, 1, 297876))
(368.8800048828125, 25.510204081632654, 15.306122448979592, datetime.datetime(2020, 12, 7, 9, 53, 2, 284664))
(368.9599914550781, 25.0, 10.0, datetime.datetime(2020, 12, 7, 9, 54, 3, 259445))
(368.94000244140625, 30.0, 6.0, datetime.datetime(2020, 12, 7, 9, 55, 4, 152614))
(368.8622131347656, 27.0, 14.0, datetime.datetime(2020, 12, 7, 9, 56, 5, 209640))
(368.9549865722656, 19.387755102040817, 22.448979591836736, datetime.datetime(2020, 12, 7, 9, 57, 6, 250520))
(368.9750061035156, 21.0, 14.0, datetime.datetime(2020, 12, 7, 9, 58, 7, 316346))
(369.19000244140625, 27.551020408163264, 14.285714285714286, datetime.datetime(2020, 12, 7, 9, 59, 8, 181177))
(369.3900146484375, 28.0, 9.0, datetime.datetime(2020, 12, 7, 10, 0, 9, 81664))
(369.2900085449219, 32.0, 10.0, datetime.datetime(2020, 12, 7, 10, 1, 10, 151049))
(369.2698059082031, 25.252525252525253, 13.131313131313131, datetime.datetime(2020, 12, 7, 10, 2, 11, 88995))
(369.1805114746094, 29.292929292929294, 10.1010101010101, datetime.datetime(2020, 12, 7, 10, 3, 11, 929796))
(369.1499938964844, 28.571428571428573, 18.367346938775512, datetime.datetime(2020, 12, 7, 10, 4, 12, 970573))
(369.17999267578125, 32.0, 11.0, datetime.datetime(2020, 12, 7, 10, 5, 13, 890249))
(369.17999267578125, 32.6530612244898, 10.204081632653061, datetime.datetime(2020, 12, 7, 10, 6, 14, 872810))
(369.1600036621094, 28.42105263157895, 9.473684210526315, datetime.datetime(2020, 12, 7, 10, 7, 15, 936018))
(369.2492980957031, 26.0, 21.0, datetime.datetime(2020, 12, 7, 10, 8, 16, 934514))
(369.2300109863281, 24.0, 15.0, datetime.datetime(2020, 12, 7, 10, 9, 17, 967580))
(369.32000732421875, 43.0, 10.0, datetime.datetime(2020, 12, 7, 10, 10, 19, 32556))
(369.3699951171875, 24.0, 14.0, datetime.datetime(2020, 12, 7, 10, 11, 20, 46685))
(369.3699951171875, 39.0, 8.0, datetime.datetime(2020, 12, 7, 10, 12, 20, 995602))
(369.3949890136719, 22.0, 19.0, datetime.datetime(2020, 12, 7, 10, 13, 22, 574))
(369.3599853515625, 37.0, 11.0, datetime.datetime(2020, 12, 7, 10, 14, 22, 924000))
(369.4200134277344, 31.0, 9.0, datetime.datetime(2020, 12, 7, 10, 15, 23, 971453))
(369.3203125, 24.0, 15.0, datetime.datetime(2020, 12, 7, 10, 16, 25, 16422))
(369.2300109863281, 30.0, 9.0, datetime.datetime(2020, 12, 7, 10, 17, 26, 213461))
(369.2699890136719, 34.343434343434346, 17.171717171717173, datetime.datetime(2020, 12, 7, 10, 18, 27, 131990))
(369.3299865722656, 27.0, 11.0, datetime.datetime(2020, 12, 7, 10, 19, 28, 189443))
(369.3880920410156, 26.262626262626263, 10.1010101010101, datetime.datetime(2020, 12, 7, 10, 20, 30, 12902))
(369.3500061035156, 32.323232323232325, 12.121212121212121, datetime.datetime(2020, 12, 7, 10, 21, 31, 64623))
(369.32000732421875, 28.0, 13.0, datetime.datetime(2020, 12, 7, 10, 22, 32, 60277))
(369.31500244140625, 21.21212121212121, 13.131313131313131, datetime.datetime(2020, 12, 7, 10, 23, 33, 2540))
(369.4700012207031, 33.333333333333336, 13.131313131313131, datetime.datetime(2020, 12, 7, 10, 24, 33, 944240))
(369.3500061035156, 29.0, 8.0, datetime.datetime(2020, 12, 7, 10, 25, 34, 862308))
(369.43499755859375, 33.333333333333336, 12.121212121212121, datetime.datetime(2020, 12, 7, 10, 26, 35, 801030))
(369.45001220703125, 26.0, 12.0, datetime.datetime(2020, 12, 7, 10, 27, 36, 829733))
(369.42999267578125, 36.0, 10.0, datetime.datetime(2020, 12, 7, 10, 28, 37, 821806))
(369.4289855957031, 32.323232323232325, 12.121212121212121, datetime.datetime(2020, 12, 7, 10, 29, 38, 845369))
(369.44000244140625, 34.0, 9.0, datetime.datetime(2020, 12, 7, 10, 30, 39, 985541))
(369.5198974609375, 24.0, 5.0, datetime.datetime(2020, 12, 7, 10, 31, 41, 14100))
(369.5118103027344, 26.0, 9.0, datetime.datetime(2020, 12, 7, 10, 32, 42, 21067))
(369.493408203125, 28.571428571428573, 16.3265306122449, datetime.datetime(2020, 12, 7, 10, 33, 42, 990014))
(369.4718933105469, 32.0, 13.0, datetime.datetime(2020, 12, 7, 10, 34, 43, 951700))
(369.5000915527344, 27.0, 10.0, datetime.datetime(2020, 12, 7, 10, 35, 45, 9202))
(369.489990234375, 34.0, 8.0, datetime.datetime(2020, 12, 7, 10, 36, 46, 111664))
(369.5, 26.0, 16.0, datetime.datetime(2020, 12, 7, 10, 37, 47, 45296))
(369.4418029785156, 29.292929292929294, 9.090909090909092, datetime.datetime(2020, 12, 7, 10, 38, 48, 22933))
(369.4307861328125, 33.333333333333336, 9.090909090909092, datetime.datetime(2020, 12, 7, 10, 39, 48, 988354))
(369.41510009765625, 29.0, 10.0, datetime.datetime(2020, 12, 7, 10, 40, 50, 986665))
(369.3599853515625, 26.0, 13.0, datetime.datetime(2020, 12, 7, 10, 41, 52, 19264))
(369.3399963378906, 23.0, 14.0, datetime.datetime(2020, 12, 7, 10, 42, 52, 950987))
(369.42999267578125, 26.0, 11.0, datetime.datetime(2020, 12, 7, 10, 43, 53, 960338))
(369.3599853515625, 32.0, 13.0, datetime.datetime(2020, 12, 7, 10, 44, 54, 901584))
(369.3750915527344, 20.0, 15.0, datetime.datetime(2020, 12, 7, 10, 45, 56, 25802))
(369.4200134277344, 25.0, 13.0, datetime.datetime(2020, 12, 7, 10, 46, 57, 128734))
(369.3999938964844, 29.0, 15.0, datetime.datetime(2020, 12, 7, 10, 47, 58, 81604))
(369.42999267578125, 29.0, 14.0, datetime.datetime(2020, 12, 7, 10, 48, 59, 152488))
(369.4617919921875, 33.0, 16.0, datetime.datetime(2020, 12, 7, 10, 50, 0, 175911))
(369.4339904785156, 29.591836734693878, 13.26530612244898, datetime.datetime(2020, 12, 7, 10, 51, 1, 208069))
(369.5199890136719, 32.0, 10.0, datetime.datetime(2020, 12, 7, 10, 52, 2, 215830))
(369.5315856933594, 26.262626262626263, 12.121212121212121, datetime.datetime(2020, 12, 7, 10, 53, 3, 205060))
(369.5199890136719, 27.0, 18.0, datetime.datetime(2020, 12, 7, 10, 54, 4, 247733))
(369.54998779296875, 20.0, 16.0, datetime.datetime(2020, 12, 7, 10, 55, 5, 462817))
(369.5, 22.0, 14.0, datetime.datetime(2020, 12, 7, 10, 56, 6, 493123))
(369.4949951171875, 31.0, 9.0, datetime.datetime(2020, 12, 7, 10, 57, 7, 608603))
(369.54998779296875, 28.0, 12.0, datetime.datetime(2020, 12, 7, 10, 58, 8, 633164))
(369.30999755859375, 24.0, 18.0, datetime.datetime(2020, 12, 7, 10, 59, 9, 708749))
(369.2699890136719, 28.0, 11.0, datetime.datetime(2020, 12, 7, 11, 0, 10, 711566))
(369.3059997558594, 22.22222222222222, 13.131313131313131, datetime.datetime(2020, 12, 7, 11, 1, 11, 781369))
(369.3500061035156, 24.0, 16.0, datetime.datetime(2020, 12, 7, 11, 2, 12, 792713))
(369.3500061035156, 35.714285714285715, 11.224489795918368, datetime.datetime(2020, 12, 7, 11, 3, 13, 868302))
(369.3500061035156, 29.292929292929294, 9.090909090909092, datetime.datetime(2020, 12, 7, 11, 4, 14, 782674))
(369.4700012207031, 28.282828282828284, 18.181818181818183, datetime.datetime(2020, 12, 7, 11, 5, 15, 943247))
(369.3999938964844, 17.0, 17.0, datetime.datetime(2020, 12, 7, 11, 6, 16, 935372))
(369.36639404296875, 26.0, 14.0, datetime.datetime(2020, 12, 7, 11, 7, 18, 41498))
(369.3799133300781, 35.0, 12.0, datetime.datetime(2020, 12, 7, 11, 8, 19, 37272))
(369.4800109863281, 29.0, 9.0, datetime.datetime(2020, 12, 7, 11, 9, 20, 31482))
(369.5, 31.632653061224488, 12.244897959183673, datetime.datetime(2020, 12, 7, 11, 10, 21, 17601))
(369.42999267578125, 20.0, 11.0, datetime.datetime(2020, 12, 7, 11, 11, 22, 9373))
(369.4679870605469, 30.0, 12.0, datetime.datetime(2020, 12, 7, 11, 12, 22, 865363))
(369.5, 33.333333333333336, 11.11111111111111, datetime.datetime(2020, 12, 7, 11, 13, 23, 874035))
(369.44000244140625, 28.571428571428573, 12.244897959183673, datetime.datetime(2020, 12, 7, 11, 14, 24, 877281))
(369.3699951171875, 34.0, 11.0, datetime.datetime(2020, 12, 7, 11, 15, 25, 989725))
(369.4079895019531, 27.272727272727273, 14.141414141414142, datetime.datetime(2020, 12, 7, 11, 16, 26, 949927))
(369.3999938964844, 27.272727272727273, 15.151515151515152, datetime.datetime(2020, 12, 7, 11, 17, 28, 635))
(369.3500061035156, 25.0, 22.0, datetime.datetime(2020, 12, 7, 11, 18, 29, 87395))
(369.37799072265625, 31.31313131313131, 17.171717171717173, datetime.datetime(2020, 12, 7, 11, 19, 30, 418376))
(369.31500244140625, 24.242424242424242, 16.161616161616163, datetime.datetime(2020, 12, 7, 11, 20, 31, 699383))
(369.4664001464844, 28.0, 14.0, datetime.datetime(2020, 12, 7, 11, 21, 32, 742002))
(369.4811096191406, 25.77319587628866, 13.402061855670103, datetime.datetime(2020, 12, 7, 11, 22, 33, 717356))
(369.32000732421875, 28.571428571428573, 13.26530612244898, datetime.datetime(2020, 12, 7, 11, 23, 34, 877142))
(369.3500061035156, 35.714285714285715, 11.224489795918368, datetime.datetime(2020, 12, 7, 11, 24, 35, 993316))
(369.2699890136719, 27.551020408163264, 18.367346938775512, datetime.datetime(2020, 12, 7, 11, 25, 37, 241572))
(369.260009765625, 23.232323232323232, 13.131313131313131, datetime.datetime(2020, 12, 7, 11, 26, 38, 228453))
(369.364990234375, 29.0, 17.0, datetime.datetime(2020, 12, 7, 11, 27, 39, 354227))
(369.44000244140625, 32.0, 14.0, datetime.datetime(2020, 12, 7, 11, 28, 40, 408711))
(369.4750061035156, 23.232323232323232, 19.19191919191919, datetime.datetime(2020, 12, 7, 11, 29, 41, 425319))
(369.4200134277344, 25.0, 16.0, datetime.datetime(2020, 12, 7, 11, 30, 42, 423570))
(369.42999267578125, 33.0, 10.0, datetime.datetime(2020, 12, 7, 11, 31, 43, 476682))
(369.3999938964844, 25.252525252525253, 12.121212121212121, datetime.datetime(2020, 12, 7, 11, 32, 44, 520604))
(369.385009765625, 24.489795918367346, 16.3265306122449, datetime.datetime(2020, 12, 7, 11, 33, 45, 490132))
(369.3424987792969, 37.0, 17.0, datetime.datetime(2020, 12, 7, 11, 34, 46, 416166))
(369.3699951171875, 22.352941176470587, 8.235294117647058, datetime.datetime(2020, 12, 7, 11, 35, 47, 398810))
(369.364990234375, 26.31578947368421, 14.736842105263158, datetime.datetime(2020, 12, 7, 11, 36, 48, 528104))
(369.4100036621094, 30.303030303030305, 9.090909090909092, datetime.datetime(2020, 12, 7, 11, 37, 49, 588889))
(369.44000244140625, 18.367346938775512, 18.367346938775512, datetime.datetime(2020, 12, 7, 11, 38, 50, 753210))
(369.42999267578125, 21.0, 17.0, datetime.datetime(2020, 12, 7, 11, 39, 51, 848206))
(369.42498779296875, 17.171717171717173, 19.19191919191919, datetime.datetime(2020, 12, 7, 11, 40, 52, 915073))
(369.43011474609375, 21.0, 8.0, datetime.datetime(2020, 12, 7, 11, 41, 54, 22300))
(369.4620056152344, 18.0, 11.0, datetime.datetime(2020, 12, 7, 11, 42, 55, 30026))
(369.3299865722656, 26.041666666666668, 15.625, datetime.datetime(2020, 12, 7, 11, 43, 56, 94804))
(369.3599853515625, 21.0, 21.0, datetime.datetime(2020, 12, 7, 11, 44, 57, 140134))
(369.489990234375, 21.21212121212121, 13.131313131313131, datetime.datetime(2020, 12, 7, 11, 45, 58, 283757))
(369.57000732421875, 17.346938775510203, 19.387755102040817, datetime.datetime(2020, 12, 7, 11, 46, 59, 274453))
(369.5775146484375, 24.0, 17.0, datetime.datetime(2020, 12, 7, 11, 48, 0, 181283))
(369.5, 29.0, 11.0, datetime.datetime(2020, 12, 7, 11, 49, 1, 95547))
(369.4700012207031, 24.489795918367346, 21.428571428571427, datetime.datetime(2020, 12, 7, 11, 50, 2, 134433))
(369.4700012207031, 24.242424242424242, 12.121212121212121, datetime.datetime(2020, 12, 7, 11, 51, 3, 241862))
(369.4100036621094, 30.303030303030305, 9.090909090909092, datetime.datetime(2020, 12, 7, 11, 52, 4, 280218))
(369.4100036621094, 29.292929292929294, 11.11111111111111, datetime.datetime(2020, 12, 7, 11, 53, 5, 254154))
(369.29998779296875, 26.0, 11.0, datetime.datetime(2020, 12, 7, 11, 54, 6, 179363))
(369.2300109863281, 30.0, 20.0, datetime.datetime(2020, 12, 7, 11, 55, 7, 159262))
(369.1000061035156, 17.171717171717173, 19.19191919191919, datetime.datetime(2020, 12, 7, 11, 56, 8, 246405))
(369.17279052734375, 31.0, 15.0, datetime.datetime(2020, 12, 7, 11, 57, 9, 229913))
(369.131103515625, 31.0, 14.0, datetime.datetime(2020, 12, 7, 11, 58, 10, 350422))
(369.2699890136719, 24.242424242424242, 13.131313131313131, datetime.datetime(2020, 12, 7, 11, 59, 11, 405248))
(369.3399963378906, 25.0, 12.0, datetime.datetime(2020, 12, 7, 12, 0, 13, 842727))
(369.260009765625, 23.0, 11.0, datetime.datetime(2020, 12, 7, 12, 1, 14, 750815))
(369.3399963378906, 19.19191919191919, 18.181818181818183, datetime.datetime(2020, 12, 7, 12, 2, 15, 688781))
(369.389892578125, 23.0, 18.0, datetime.datetime(2020, 12, 7, 12, 3, 16, 589752))
(369.4049987792969, 20.0, 12.0, datetime.datetime(2020, 12, 7, 12, 4, 17, 604235))
(369.42999267578125, 26.53061224489796, 13.26530612244898, datetime.datetime(2020, 12, 7, 12, 5, 18, 455921))
(369.37701416015625, 28.0, 23.0, datetime.datetime(2020, 12, 7, 12, 6, 19, 368802))
(369.3599853515625, 27.0, 16.0, datetime.datetime(2020, 12, 7, 12, 7, 20, 284841))
(369.32000732421875, 22.0, 9.0, datetime.datetime(2020, 12, 7, 12, 8, 21, 240286))
(369.3900146484375, 24.489795918367346, 19.387755102040817, datetime.datetime(2020, 12, 7, 12, 9, 22, 191770))
(369.3900146484375, 22.0, 16.0, datetime.datetime(2020, 12, 7, 12, 10, 23, 314641))
(369.3800048828125, 26.0, 11.0, datetime.datetime(2020, 12, 7, 12, 11, 24, 452898))
(369.3500061035156, 24.0, 14.0, datetime.datetime(2020, 12, 7, 12, 12, 25, 392705))
(369.3500061035156, 26.0, 8.0, datetime.datetime(2020, 12, 7, 12, 13, 26, 501731))
(369.3349914550781, 23.0, 14.0, datetime.datetime(2020, 12, 7, 12, 14, 27, 472115))
(369.2799987792969, 35.0, 13.0, datetime.datetime(2020, 12, 7, 12, 15, 28, 420322))
(369.2799987792969, 24.0, 18.0, datetime.datetime(2020, 12, 7, 12, 16, 29, 528589))
(369.135009765625, 19.0, 16.0, datetime.datetime(2020, 12, 7, 12, 17, 30, 454366))
(369.20001220703125, 28.0, 10.0, datetime.datetime(2020, 12, 7, 12, 18, 31, 384089))
(369.3299865722656, 24.242424242424242, 9.090909090909092, datetime.datetime(2020, 12, 7, 12, 19, 32, 429342))
(369.2300109863281, 35.0, 10.0, datetime.datetime(2020, 12, 7, 12, 20, 33, 370218))
(369.260009765625, 25.0, 15.0, datetime.datetime(2020, 12, 7, 12, 21, 34, 425303))
(369.2099914550781, 31.31313131313131, 7.070707070707071, datetime.datetime(2020, 12, 7, 12, 22, 35, 452396))
(369.2250061035156, 28.282828282828284, 18.181818181818183, datetime.datetime(2020, 12, 7, 12, 23, 36, 513309))
(369.1300048828125, 12.121212121212121, 25.252525252525253, datetime.datetime(2020, 12, 7, 12, 24, 37, 389019))
(369.19000244140625, 21.0, 12.0, datetime.datetime(2020, 12, 7, 12, 25, 38, 309703))
(369.2099914550781, 27.0, 7.0, datetime.datetime(2020, 12, 7, 12, 26, 39, 239550))
(369.1700134277344, 25.0, 9.0, datetime.datetime(2020, 12, 7, 12, 27, 40, 79299))
(369.1600036621094, 27.272727272727273, 10.1010101010101, datetime.datetime(2020, 12, 7, 12, 28, 41, 77203))
(369.20001220703125, 20.2020202020202, 17.171717171717173, datetime.datetime(2020, 12, 7, 12, 29, 42, 6815))
(369.20001220703125, 29.0, 15.0, datetime.datetime(2020, 12, 7, 12, 30, 44, 40598))
(369.17999267578125, 22.22222222222222, 12.121212121212121, datetime.datetime(2020, 12, 7, 12, 31, 45, 62610))
(369.1600036621094, 20.0, 11.0, datetime.datetime(2020, 12, 7, 12, 32, 46, 15417))
(369.1000061035156, 26.0, 19.0, datetime.datetime(2020, 12, 7, 12, 33, 47, 304053))
(369.0799865722656, 23.0, 9.0, datetime.datetime(2020, 12, 7, 12, 34, 48, 317164))
(369.114990234375, 25.0, 13.0, datetime.datetime(2020, 12, 7, 12, 35, 49, 367683))
(369.1099853515625, 15.0, 18.0, datetime.datetime(2020, 12, 7, 12, 36, 50, 310607))
(369.1899108886719, 22.0, 16.0, datetime.datetime(2020, 12, 7, 12, 37, 51, 275327))
(369.125, 17.171717171717173, 13.131313131313131, datetime.datetime(2020, 12, 7, 12, 38, 52, 172550))
(369.17498779296875, 30.303030303030305, 15.151515151515152, datetime.datetime(2020, 12, 7, 12, 39, 53, 170682))
(369.1099853515625, 25.0, 12.0, datetime.datetime(2020, 12, 7, 12, 40, 54, 300990))
(369.1099853515625, 25.0, 16.0, datetime.datetime(2020, 12, 7, 12, 41, 55, 249092))
(369.1400146484375, 19.387755102040817, 13.26530612244898, datetime.datetime(2020, 12, 7, 12, 42, 56, 444327))
(369.1499938964844, 23.0, 15.0, datetime.datetime(2020, 12, 7, 12, 43, 57, 411477))
(369.1600036621094, 20.0, 12.0, datetime.datetime(2020, 12, 7, 12, 44, 58, 410072))
(369.1700134277344, 27.551020408163264, 11.224489795918368, datetime.datetime(2020, 12, 7, 12, 46, 0, 289318))
(369.1650085449219, 16.0, 12.0, datetime.datetime(2020, 12, 7, 12, 47, 1, 311700))
(369.1388854980469, 24.0, 16.0, datetime.datetime(2020, 12, 7, 12, 48, 2, 319449))
(369.1459045410156, 27.0, 16.0, datetime.datetime(2020, 12, 7, 12, 49, 3, 225496))
(369.17498779296875, 17.0, 11.0, datetime.datetime(2020, 12, 7, 12, 50, 4, 193237))
(369.1759033203125, 25.0, 18.0, datetime.datetime(2020, 12, 7, 12, 51, 5, 234643))
(369.17498779296875, 24.0, 7.0, datetime.datetime(2020, 12, 7, 12, 52, 6, 158752))
(369.0400085449219, 24.242424242424242, 14.141414141414142, datetime.datetime(2020, 12, 7, 12, 53, 7, 100285))
(369.0299987792969, 31.0, 12.0, datetime.datetime(2020, 12, 7, 12, 54, 8, 222320))
(369.0199890136719, 21.0, 11.0, datetime.datetime(2020, 12, 7, 12, 55, 9, 401527))
(369.010009765625, 27.272727272727273, 15.151515151515152, datetime.datetime(2020, 12, 7, 12, 56, 10, 389433))
(368.9150085449219, 24.0, 9.0, datetime.datetime(2020, 12, 7, 12, 57, 11, 306859))
(368.9599914550781, 30.303030303030305, 13.131313131313131, datetime.datetime(2020, 12, 7, 12, 58, 12, 555716))
(368.92999267578125, 30.303030303030305, 10.1010101010101, datetime.datetime(2020, 12, 7, 12, 59, 13, 668460))
(368.78009033203125, 32.0, 7.0, datetime.datetime(2020, 12, 7, 13, 0, 14, 593224))
(368.8388977050781, 24.0, 19.0, datetime.datetime(2020, 12, 7, 13, 1, 15, 701752))
(368.7699890136719, 24.0, 15.0, datetime.datetime(2020, 12, 7, 13, 2, 16, 560004))
(368.7799987792969, 31.0, 10.0, datetime.datetime(2020, 12, 7, 13, 3, 17, 634474))
(368.7550048828125, 22.0, 7.0, datetime.datetime(2020, 12, 7, 13, 4, 18, 690827))
(368.6924133300781, 30.303030303030305, 15.151515151515152, datetime.datetime(2020, 12, 7, 13, 5, 19, 691076))
(368.6600036621094, 31.31313131313131, 10.1010101010101, datetime.datetime(2020, 12, 7, 13, 6, 20, 905376))
(368.52099609375, 35.35353535353536, 17.171717171717173, datetime.datetime(2020, 12, 7, 13, 7, 21, 996962))
(368.6763000488281, 34.343434343434346, 11.11111111111111, datetime.datetime(2020, 12, 7, 13, 8, 23, 120071))
(368.6600036621094, 21.649484536082475, 17.52577319587629, datetime.datetime(2020, 12, 7, 13, 9, 24, 127433))
(368.6300048828125, 25.0, 13.0, datetime.datetime(2020, 12, 7, 13, 10, 25, 145645))
(368.6081848144531, 19.0, 19.0, datetime.datetime(2020, 12, 7, 13, 11, 26, 195193))
(368.54998779296875, 34.0, 14.0, datetime.datetime(2020, 12, 7, 13, 12, 27, 243711))
(368.55499267578125, 24.242424242424242, 16.161616161616163, datetime.datetime(2020, 12, 7, 13, 13, 28, 447066))
(368.3900146484375, 28.0, 14.0, datetime.datetime(2020, 12, 7, 13, 14, 29, 591667))
(368.3599853515625, 28.0, 11.0, datetime.datetime(2020, 12, 7, 13, 15, 30, 731510))
(368.42999267578125, 25.252525252525253, 16.161616161616163, datetime.datetime(2020, 12, 7, 13, 16, 31, 825221))
(368.4598083496094, 28.282828282828284, 16.161616161616163, datetime.datetime(2020, 12, 7, 13, 17, 32, 758676))
(368.510009765625, 30.0, 16.0, datetime.datetime(2020, 12, 7, 13, 18, 33, 847171))
(368.489990234375, 32.0, 9.0, datetime.datetime(2020, 12, 7, 13, 19, 34, 992830))
(368.4599914550781, 35.0, 18.0, datetime.datetime(2020, 12, 7, 13, 20, 36, 57622))
(368.56500244140625, 31.0, 13.0, datetime.datetime(2020, 12, 7, 13, 21, 37, 87530))
Traceback (most recent call last):
  File "FP_TweetMiner_SPY.py", line 180, in <module>
    main()
  File "FP_TweetMiner_SPY.py", line 131, in main
    shareprice = si.get_live_price("SPY")
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/yahoo_fin/stock_info.py", line 471, in get_live_price
    df = get_data(ticker, end_date = pd.Timestamp.today() + pd.DateOffset(10))
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/yahoo_fin/stock_info.py", line 79, in get_data
    raise AssertionError(resp.json())
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/site-packages/requests/models.py", line 898, in json
    return complexjson.loads(self.text, **kwargs)
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Users/adamkratch/opt/anaconda3/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) adamkratch@MacBook-Pro ArtsNCrafts % python FP_TweetMiner_SPY.py
(368.4800109863281, 32.0, 17.0, datetime.datetime(2020, 12, 7, 13, 54, 54, 645382))
(368.45001220703125, 35.0, 16.0, datetime.datetime(2020, 12, 7, 13, 55, 55, 668576))
(368.43701171875, 36.0, 10.0, datetime.datetime(2020, 12, 7, 13, 56, 56, 578115))
(368.489990234375, 25.252525252525253, 10.1010101010101, datetime.datetime(2020, 12, 7, 13, 57, 57, 514731))
(368.4599914550781, 27.0, 15.0, datetime.datetime(2020, 12, 7, 13, 58, 58, 524276))
(368.4101867675781, 31.0, 17.0, datetime.datetime(2020, 12, 7, 13, 59, 59, 467169))
(368.22589111328125, 37.0, 11.0, datetime.datetime(2020, 12, 7, 14, 1, 0, 473908))
(368.1600036621094, 28.0, 15.0, datetime.datetime(2020, 12, 7, 14, 2, 1, 453395))
(368.12799072265625, 27.272727272727273, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 3, 2, 448479))
(367.95001220703125, 35.714285714285715, 11.224489795918368, datetime.datetime(2020, 12, 7, 14, 4, 3, 424785))
(368.0714111328125, 31.31313131313131, 14.141414141414142, datetime.datetime(2020, 12, 7, 14, 5, 4, 365809))
(368.1099853515625, 26.53061224489796, 12.244897959183673, datetime.datetime(2020, 12, 7, 14, 6, 6, 544671))
(368.2558898925781, 27.272727272727273, 19.19191919191919, datetime.datetime(2020, 12, 7, 14, 7, 7, 610379))
(368.2601013183594, 24.0, 23.0, datetime.datetime(2020, 12, 7, 14, 8, 8, 626147))
(368.2699890136719, 22.0, 25.0, datetime.datetime(2020, 12, 7, 14, 9, 9, 591166))
(368.3999938964844, 29.292929292929294, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 10, 10, 534026))
(368.3699035644531, 20.0, 23.0, datetime.datetime(2020, 12, 7, 14, 11, 11, 609480))
(368.260009765625, 31.0, 12.0, datetime.datetime(2020, 12, 7, 14, 12, 12, 728819))
(368.239990234375, 28.0, 16.0, datetime.datetime(2020, 12, 7, 14, 13, 13, 704802))
(368.2200012207031, 31.31313131313131, 20.2020202020202, datetime.datetime(2020, 12, 7, 14, 14, 14, 677371))
(368.2049865722656, 22.0, 16.0, datetime.datetime(2020, 12, 7, 14, 15, 15, 696626))
(368.05010986328125, 26.0, 20.0, datetime.datetime(2020, 12, 7, 14, 16, 16, 694172))
(368.2200012207031, 29.0, 12.0, datetime.datetime(2020, 12, 7, 14, 17, 17, 783079))
(368.29998779296875, 23.0, 17.0, datetime.datetime(2020, 12, 7, 14, 18, 18, 836716))
(368.2330017089844, 35.0, 13.0, datetime.datetime(2020, 12, 7, 14, 19, 19, 834019))
(368.2810974121094, 26.0, 10.0, datetime.datetime(2020, 12, 7, 14, 20, 20, 845648))
(368.3299865722656, 33.333333333333336, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 21, 21, 863111))
(368.32501220703125, 24.0, 17.0, datetime.datetime(2020, 12, 7, 14, 22, 22, 787552))
(368.4100036621094, 25.0, 15.0, datetime.datetime(2020, 12, 7, 14, 23, 23, 714979))
(368.4700012207031, 19.19191919191919, 16.161616161616163, datetime.datetime(2020, 12, 7, 14, 24, 24, 753392))
(368.45001220703125, 23.232323232323232, 15.151515151515152, datetime.datetime(2020, 12, 7, 14, 25, 25, 805619))
(368.44000244140625, 8.0, 20.0, datetime.datetime(2020, 12, 7, 14, 26, 26, 844423))
(368.3900146484375, 29.0, 17.0, datetime.datetime(2020, 12, 7, 14, 27, 27, 977628))
(368.4599914550781, 31.0, 11.0, datetime.datetime(2020, 12, 7, 14, 28, 28, 988715))
(368.3999938964844, 39.0, 10.0, datetime.datetime(2020, 12, 7, 14, 29, 29, 996224))
(368.4800109863281, 22.0, 13.0, datetime.datetime(2020, 12, 7, 14, 30, 31, 89844))
(368.55999755859375, 28.0, 15.0, datetime.datetime(2020, 12, 7, 14, 31, 32, 112357))
(368.57000732421875, 22.68041237113402, 11.34020618556701, datetime.datetime(2020, 12, 7, 14, 32, 33, 103338))
(368.6000061035156, 25.252525252525253, 10.1010101010101, datetime.datetime(2020, 12, 7, 14, 33, 34, 137923))
(368.5450134277344, 26.0, 6.0, datetime.datetime(2020, 12, 7, 14, 34, 35, 181521))
(368.54150390625, 26.262626262626263, 15.151515151515152, datetime.datetime(2020, 12, 7, 14, 35, 36, 109886))
(368.5799865722656, 26.0, 10.0, datetime.datetime(2020, 12, 7, 14, 36, 37, 256937))
(368.6000061035156, 29.0, 11.0, datetime.datetime(2020, 12, 7, 14, 37, 38, 270441))
(368.6300048828125, 27.0, 13.0, datetime.datetime(2020, 12, 7, 14, 38, 39, 261614))
(368.6300048828125, 25.0, 8.0, datetime.datetime(2020, 12, 7, 14, 39, 40, 243424))
(368.6282043457031, 23.0, 13.0, datetime.datetime(2020, 12, 7, 14, 40, 41, 200991))
(368.64898681640625, 30.0, 12.0, datetime.datetime(2020, 12, 7, 14, 41, 42, 203758))
(368.6600036621094, 25.252525252525253, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 42, 43, 234736))
(368.6400146484375, 35.35353535353536, 7.070707070707071, datetime.datetime(2020, 12, 7, 14, 43, 44, 315474))
(368.69000244140625, 25.0, 7.0, datetime.datetime(2020, 12, 7, 14, 44, 45, 309862))
(368.69000244140625, 25.252525252525253, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 45, 46, 373613))
(368.69000244140625, 29.0, 11.0, datetime.datetime(2020, 12, 7, 14, 46, 47, 350075))
(368.6997985839844, 23.0, 17.0, datetime.datetime(2020, 12, 7, 14, 47, 48, 384640))
(368.6900939941406, 31.0, 5.0, datetime.datetime(2020, 12, 7, 14, 48, 49, 554385))
(368.6780090332031, 29.0, 15.0, datetime.datetime(2020, 12, 7, 14, 49, 50, 561947))
(368.6600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 14, 50, 51, 702599))
(368.6449890136719, 26.262626262626263, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 51, 52, 685388))
(368.69000244140625, 29.292929292929294, 10.1010101010101, datetime.datetime(2020, 12, 7, 14, 52, 53, 653312))
(368.70001220703125, 32.0, 16.0, datetime.datetime(2020, 12, 7, 14, 53, 54, 703617))
(368.6000061035156, 26.262626262626263, 9.090909090909092, datetime.datetime(2020, 12, 7, 14, 54, 55, 736979))
(368.5299987792969, 26.262626262626263, 17.171717171717173, datetime.datetime(2020, 12, 7, 14, 55, 56, 723426))
(368.45001220703125, 27.272727272727273, 7.070707070707071, datetime.datetime(2020, 12, 7, 14, 56, 57, 794477))
(368.5, 31.31313131313131, 17.171717171717173, datetime.datetime(2020, 12, 7, 14, 57, 58, 855998))
(368.4700012207031, 24.0, 14.0, datetime.datetime(2020, 12, 7, 14, 58, 59, 793773))
(368.4100036621094, 27.0, 14.0, datetime.datetime(2020, 12, 7, 15, 0, 0, 906801))
(368.2550048828125, 29.0, 10.0, datetime.datetime(2020, 12, 7, 15, 1, 1, 881838))
(368.3900146484375, 32.0, 13.0, datetime.datetime(2020, 12, 7, 15, 2, 2, 903127))
(368.3399963378906, 28.282828282828284, 8.080808080808081, datetime.datetime(2020, 12, 7, 15, 3, 3, 965007))
(368.4599914550781, 28.0, 17.0, datetime.datetime(2020, 12, 7, 15, 4, 5, 4983))
(368.44000244140625, 23.0, 16.0, datetime.datetime(2020, 12, 7, 15, 5, 6, 49640))
(368.3699951171875, 22.22222222222222, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 6, 7, 57265))
(368.32000732421875, 29.0, 15.0, datetime.datetime(2020, 12, 7, 15, 7, 8, 79468))
(368.30499267578125, 27.551020408163264, 18.367346938775512, datetime.datetime(2020, 12, 7, 15, 8, 9, 80999))
(368.3500061035156, 29.0, 16.0, datetime.datetime(2020, 12, 7, 15, 9, 10, 47496))
(368.32000732421875, 30.612244897959183, 8.16326530612245, datetime.datetime(2020, 12, 7, 15, 10, 10, 982345))
(368.2699890136719, 27.0, 13.0, datetime.datetime(2020, 12, 7, 15, 11, 12, 390243))
(368.3399963378906, 29.0, 9.0, datetime.datetime(2020, 12, 7, 15, 12, 13, 437551))
(368.43499755859375, 24.0, 13.0, datetime.datetime(2020, 12, 7, 15, 13, 14, 384937))
(368.2850036621094, 32.0, 13.0, datetime.datetime(2020, 12, 7, 15, 14, 15, 383927))
(368.3092956542969, 27.0, 16.0, datetime.datetime(2020, 12, 7, 15, 15, 16, 364039))
(368.44000244140625, 29.0, 12.0, datetime.datetime(2020, 12, 7, 15, 16, 17, 409819))
(368.4800109863281, 21.0, 13.0, datetime.datetime(2020, 12, 7, 15, 17, 18, 418943))
(368.5299987792969, 30.303030303030305, 10.1010101010101, datetime.datetime(2020, 12, 7, 15, 18, 19, 451105))
(368.57000732421875, 29.0, 16.0, datetime.datetime(2020, 12, 7, 15, 19, 20, 491450))
(368.6000061035156, 33.333333333333336, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 20, 21, 446492))
(368.6199951171875, 25.0, 12.0, datetime.datetime(2020, 12, 7, 15, 21, 22, 501167))
(368.6300048828125, 33.0, 11.0, datetime.datetime(2020, 12, 7, 15, 22, 23, 589291))
(368.6400146484375, 28.0, 25.0, datetime.datetime(2020, 12, 7, 15, 23, 24, 614203))
(368.6700134277344, 36.734693877551024, 12.244897959183673, datetime.datetime(2020, 12, 7, 15, 24, 25, 625957))
(368.7099914550781, 26.0, 17.0, datetime.datetime(2020, 12, 7, 15, 25, 26, 658742))
(368.7149963378906, 26.0, 15.0, datetime.datetime(2020, 12, 7, 15, 26, 27, 691645))
(368.83648681640625, 23.0, 10.0, datetime.datetime(2020, 12, 7, 15, 27, 28, 723260))
(368.69000244140625, 24.0, 11.0, datetime.datetime(2020, 12, 7, 15, 28, 29, 861352))
(368.7384948730469, 22.22222222222222, 18.181818181818183, datetime.datetime(2020, 12, 7, 15, 29, 30, 957732))
(368.82000732421875, 35.0, 12.0, datetime.datetime(2020, 12, 7, 15, 30, 32, 12348))
(368.8699951171875, 28.0, 12.0, datetime.datetime(2020, 12, 7, 15, 31, 33, 53420))
(368.92999267578125, 34.343434343434346, 12.121212121212121, datetime.datetime(2020, 12, 7, 15, 32, 34, 186659))
(368.885009765625, 30.0, 12.0, datetime.datetime(2020, 12, 7, 15, 33, 35, 237377))
(368.989990234375, 29.0, 18.0, datetime.datetime(2020, 12, 7, 15, 34, 36, 213284))
(368.88409423828125, 25.510204081632654, 12.244897959183673, datetime.datetime(2020, 12, 7, 15, 35, 37, 295015))
(368.9049987792969, 26.0, 17.0, datetime.datetime(2020, 12, 7, 15, 36, 38, 309460))
(368.79998779296875, 26.0, 11.0, datetime.datetime(2020, 12, 7, 15, 37, 39, 284322))
(368.7799987792969, 32.0, 14.0, datetime.datetime(2020, 12, 7, 15, 38, 40, 247947))
(368.7499084472656, 30.0, 11.0, datetime.datetime(2020, 12, 7, 15, 39, 41, 270379))
(368.6400146484375, 22.22222222222222, 11.11111111111111, datetime.datetime(2020, 12, 7, 15, 40, 42, 318962))
(368.489990234375, 26.0, 10.0, datetime.datetime(2020, 12, 7, 15, 41, 43, 315901))
(368.3900146484375, 30.612244897959183, 10.204081632653061, datetime.datetime(2020, 12, 7, 15, 42, 44, 411157))
(368.2200012207031, 27.0, 9.0, datetime.datetime(2020, 12, 7, 15, 43, 45, 395924))
(368.1700134277344, 19.387755102040817, 15.306122448979592, datetime.datetime(2020, 12, 7, 15, 44, 46, 326975))
(368.2850036621094, 16.161616161616163, 8.080808080808081, datetime.datetime(2020, 12, 7, 15, 45, 47, 354889))
(368.1300048828125, 28.8659793814433, 12.371134020618557, datetime.datetime(2020, 12, 7, 15, 46, 48, 408583))
(368.2049865722656, 22.22222222222222, 11.11111111111111, datetime.datetime(2020, 12, 7, 15, 47, 49, 389116))
(367.9601135253906, 29.292929292929294, 18.181818181818183, datetime.datetime(2020, 12, 7, 15, 48, 50, 445351))
(367.84991455078125, 25.252525252525253, 15.151515151515152, datetime.datetime(2020, 12, 7, 15, 49, 51, 711243))
(368.1099853515625, 30.0, 14.0, datetime.datetime(2020, 12, 7, 15, 50, 52, 763641))
(368.260009765625, 22.22222222222222, 9.090909090909092, datetime.datetime(2020, 12, 7, 15, 51, 53, 786926))
(368.44000244140625, 31.0, 17.0, datetime.datetime(2020, 12, 7, 15, 52, 54, 821189))
(368.45001220703125, 16.3265306122449, 13.26530612244898, datetime.datetime(2020, 12, 7, 15, 53, 55, 765758))
(368.70001220703125, 30.303030303030305, 12.121212121212121, datetime.datetime(2020, 12, 7, 15, 54, 56, 760826))
(368.79998779296875, 32.323232323232325, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 55, 57, 708810))
(368.8999938964844, 26.53061224489796, 13.26530612244898, datetime.datetime(2020, 12, 7, 15, 56, 58, 740121))
(368.8500061035156, 26.262626262626263, 7.070707070707071, datetime.datetime(2020, 12, 7, 15, 57, 59, 748958))
(369.0350036621094, 29.896907216494846, 12.371134020618557, datetime.datetime(2020, 12, 7, 15, 59, 0, 831982))
(369.1400146484375, 26.262626262626263, 7.070707070707071, datetime.datetime(2020, 12, 7, 16, 0, 1, 907402))
(369.1600036621094, 33.0, 13.0, datetime.datetime(2020, 12, 7, 16, 1, 2, 860018))
(369.1600036621094, 30.0, 9.0, datetime.datetime(2020, 12, 7, 16, 2, 4, 110944))
(369.1600036621094, 23.46938775510204, 14.285714285714286, datetime.datetime(2020, 12, 7, 16, 3, 5, 75344))
(369.1600036621094, 22.0, 13.0, datetime.datetime(2020, 12, 7, 16, 4, 6, 161917))
(369.1600036621094, 21.0, 14.0, datetime.datetime(2020, 12, 7, 16, 5, 7, 70858))
(369.1600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 6, 7, 970758))
(369.1600036621094, 14.141414141414142, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 7, 8, 921568))
(369.1600036621094, 23.0, 7.0, datetime.datetime(2020, 12, 7, 16, 8, 9, 960196))
(369.1600036621094, 27.0, 15.0, datetime.datetime(2020, 12, 7, 16, 9, 10, 987837))
(369.1600036621094, 24.242424242424242, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 10, 12, 98382))
(369.1600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 11, 13, 10515))
(369.1600036621094, 20.0, 16.0, datetime.datetime(2020, 12, 7, 16, 12, 13, 938904))
(369.1600036621094, 20.0, 12.0, datetime.datetime(2020, 12, 7, 16, 13, 14, 891605))
(369.1600036621094, 25.0, 14.0, datetime.datetime(2020, 12, 7, 16, 14, 15, 949213))
(369.1600036621094, 29.896907216494846, 9.278350515463918, datetime.datetime(2020, 12, 7, 16, 15, 17, 11036))
(369.1600036621094, 20.0, 21.0, datetime.datetime(2020, 12, 7, 16, 16, 17, 997304))
(369.1600036621094, 22.0, 10.0, datetime.datetime(2020, 12, 7, 16, 17, 19, 98855))
(369.1600036621094, 25.0, 12.0, datetime.datetime(2020, 12, 7, 16, 18, 20, 266107))
(369.1600036621094, 27.0, 7.0, datetime.datetime(2020, 12, 7, 16, 19, 21, 278994))
(369.1600036621094, 19.0, 12.0, datetime.datetime(2020, 12, 7, 16, 20, 22, 200251))
(369.1600036621094, 26.262626262626263, 21.21212121212121, datetime.datetime(2020, 12, 7, 16, 21, 23, 278095))
(369.1600036621094, 17.171717171717173, 13.131313131313131, datetime.datetime(2020, 12, 7, 16, 22, 24, 286313))
(369.1600036621094, 25.0, 12.0, datetime.datetime(2020, 12, 7, 16, 23, 25, 290077))
(369.1600036621094, 25.0, 17.0, datetime.datetime(2020, 12, 7, 16, 24, 26, 332093))
(369.1600036621094, 25.510204081632654, 16.3265306122449, datetime.datetime(2020, 12, 7, 16, 25, 27, 412159))
(369.0899963378906, 22.22222222222222, 15.151515151515152, datetime.datetime(2020, 12, 7, 16, 26, 28, 444416))
(369.0899963378906, 32.0, 15.0, datetime.datetime(2020, 12, 7, 16, 27, 29, 636960))
(369.0899963378906, 24.489795918367346, 9.183673469387756, datetime.datetime(2020, 12, 7, 16, 28, 30, 703812))
(369.0899963378906, 30.0, 16.0, datetime.datetime(2020, 12, 7, 16, 29, 31, 804883))
(369.0899963378906, 25.0, 19.0, datetime.datetime(2020, 12, 7, 16, 30, 32, 742894))
(369.0899963378906, 25.0, 8.0, datetime.datetime(2020, 12, 7, 16, 31, 33, 857808))
(369.0899963378906, 25.0, 14.0, datetime.datetime(2020, 12, 7, 16, 32, 34, 898879))
(369.0899963378906, 30.0, 16.0, datetime.datetime(2020, 12, 7, 16, 33, 35, 996491))
(369.0899963378906, 24.0, 17.0, datetime.datetime(2020, 12, 7, 16, 34, 37, 59815))
(369.0899963378906, 23.46938775510204, 11.224489795918368, datetime.datetime(2020, 12, 7, 16, 35, 38, 144391))
(369.0899963378906, 23.0, 15.0, datetime.datetime(2020, 12, 7, 16, 36, 39, 192686))
(369.0899963378906, 32.0, 11.0, datetime.datetime(2020, 12, 7, 16, 37, 40, 200093))
(369.0899963378906, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 38, 41, 186500))
(369.0899963378906, 23.0, 17.0, datetime.datetime(2020, 12, 7, 16, 39, 42, 268368))
(369.0899963378906, 22.0, 15.0, datetime.datetime(2020, 12, 7, 16, 40, 43, 341423))
(369.0899963378906, 29.0, 15.0, datetime.datetime(2020, 12, 7, 16, 41, 44, 466645))
(369.0899963378906, 27.0, 13.0, datetime.datetime(2020, 12, 7, 16, 42, 45, 531457))
(369.0899963378906, 34.0, 11.0, datetime.datetime(2020, 12, 7, 16, 43, 46, 575984))
(369.0899963378906, 27.0, 15.0, datetime.datetime(2020, 12, 7, 16, 44, 47, 641356))
(369.0899963378906, 24.0, 14.0, datetime.datetime(2020, 12, 7, 16, 45, 48, 646570))
(369.0899963378906, 24.0, 14.0, datetime.datetime(2020, 12, 7, 16, 46, 49, 673039))
(369.0899963378906, 24.242424242424242, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 47, 50, 781928))
(369.0899963378906, 24.0, 13.0, datetime.datetime(2020, 12, 7, 16, 48, 51, 740728))
(369.0899963378906, 28.571428571428573, 14.285714285714286, datetime.datetime(2020, 12, 7, 16, 49, 52, 736233))
(369.0899963378906, 34.69387755102041, 19.387755102040817, datetime.datetime(2020, 12, 7, 16, 50, 53, 778138))
(369.0899963378906, 31.632653061224488, 20.408163265306122, datetime.datetime(2020, 12, 7, 16, 51, 54, 836311))
(369.0899963378906, 32.323232323232325, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 52, 55, 844805))
(369.0899963378906, 27.835051546391753, 7.216494845360825, datetime.datetime(2020, 12, 7, 16, 53, 56, 876442))
(369.0899963378906, 27.272727272727273, 18.181818181818183, datetime.datetime(2020, 12, 7, 16, 54, 57, 845768))
(369.0899963378906, 29.591836734693878, 13.26530612244898, datetime.datetime(2020, 12, 7, 16, 55, 58, 863486))
(369.0899963378906, 27.272727272727273, 11.11111111111111, datetime.datetime(2020, 12, 7, 16, 56, 59, 871781))
(369.0899963378906, 31.31313131313131, 10.1010101010101, datetime.datetime(2020, 12, 7, 16, 58, 0, 917854))
(369.0899963378906, 26.31578947368421, 12.631578947368421, datetime.datetime(2020, 12, 7, 16, 59, 1, 954829))
(369.0899963378906, 22.68041237113402, 10.309278350515465, datetime.datetime(2020, 12, 7, 17, 0, 3, 118357))
(369.0899963378906, 26.0, 13.0, datetime.datetime(2020, 12, 7, 17, 1, 4, 114889))
(369.0899963378906, 30.612244897959183, 17.346938775510203, datetime.datetime(2020, 12, 7, 17, 2, 5, 166690))
(369.0899963378906, 26.262626262626263, 10.1010101010101, datetime.datetime(2020, 12, 7, 17, 3, 6, 188888))
(369.0899963378906, 26.804123711340207, 14.43298969072165, datetime.datetime(2020, 12, 7, 17, 4, 7, 224058))
(369.0899963378906, 19.0, 15.0, datetime.datetime(2020, 12, 7, 17, 5, 8, 240998))
(369.0899963378906, 34.69387755102041, 7.142857142857143, datetime.datetime(2020, 12, 7, 17, 6, 9, 268729))
(369.0899963378906, 32.0, 4.0, datetime.datetime(2020, 12, 7, 17, 7, 10, 427563))
(369.0899963378906, 30.0, 9.0, datetime.datetime(2020, 12, 7, 17, 8, 11, 421058))
(369.0899963378906, 26.262626262626263, 8.080808080808081, datetime.datetime(2020, 12, 7, 17, 9, 12, 388790))
(369.0899963378906, 32.6530612244898, 8.16326530612245, datetime.datetime(2020, 12, 7, 17, 10, 13, 301013))
(369.0899963378906, 26.53061224489796, 9.183673469387756, datetime.datetime(2020, 12, 7, 17, 11, 14, 402722))
(369.0899963378906, 22.22222222222222, 14.141414141414142, datetime.datetime(2020, 12, 7, 17, 12, 15, 608448))
(369.0899963378906, 23.232323232323232, 18.181818181818183, datetime.datetime(2020, 12, 7, 17, 13, 16, 725467))
(369.0899963378906, 16.3265306122449, 19.387755102040817, datetime.datetime(2020, 12, 7, 17, 14, 17, 755780))
(369.0899963378906, 25.0, 7.0, datetime.datetime(2020, 12, 7, 17, 15, 18, 749056))
(369.0899963378906, 25.510204081632654, 11.224489795918368, datetime.datetime(2020, 12, 7, 17, 16, 20, 502978))
(369.0899963378906, 25.252525252525253, 13.131313131313131, datetime.datetime(2020, 12, 7, 17, 17, 21, 580367))
Loop Complete
[(368.4800109863281, 32.0, 17.0, datetime.datetime(2020, 12, 7, 13, 54, 54, 645382)), (368.45001220703125, 35.0, 16.0, datetime.datetime(2020, 12, 7, 13, 55, 55, 668576)), (368.43701171875, 36.0, 10.0, datetime.datetime(2020, 12, 7, 13, 56, 56, 578115)), (368.489990234375, 25.252525252525253, 10.1010101010101, datetime.datetime(2020, 12, 7, 13, 57, 57, 514731)), (368.4599914550781, 27.0, 15.0, datetime.datetime(2020, 12, 7, 13, 58, 58, 524276)), (368.4101867675781, 31.0, 17.0, datetime.datetime(2020, 12, 7, 13, 59, 59, 467169)), (368.22589111328125, 37.0, 11.0, datetime.datetime(2020, 12, 7, 14, 1, 0, 473908)), (368.1600036621094, 28.0, 15.0, datetime.datetime(2020, 12, 7, 14, 2, 1, 453395)), (368.12799072265625, 27.272727272727273, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 3, 2, 448479)), (367.95001220703125, 35.714285714285715, 11.224489795918368, datetime.datetime(2020, 12, 7, 14, 4, 3, 424785)), (368.0714111328125, 31.31313131313131, 14.141414141414142, datetime.datetime(2020, 12, 7, 14, 5, 4, 365809)), (368.1099853515625, 26.53061224489796, 12.244897959183673, datetime.datetime(2020, 12, 7, 14, 6, 6, 544671)), (368.2558898925781, 27.272727272727273, 19.19191919191919, datetime.datetime(2020, 12, 7, 14, 7, 7, 610379)), (368.2601013183594, 24.0, 23.0, datetime.datetime(2020, 12, 7, 14, 8, 8, 626147)), (368.2699890136719, 22.0, 25.0, datetime.datetime(2020, 12, 7, 14, 9, 9, 591166)), (368.3999938964844, 29.292929292929294, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 10, 10, 534026)), (368.3699035644531, 20.0, 23.0, datetime.datetime(2020, 12, 7, 14, 11, 11, 609480)), (368.260009765625, 31.0, 12.0, datetime.datetime(2020, 12, 7, 14, 12, 12, 728819)), (368.239990234375, 28.0, 16.0, datetime.datetime(2020, 12, 7, 14, 13, 13, 704802)), (368.2200012207031, 31.31313131313131, 20.2020202020202, datetime.datetime(2020, 12, 7, 14, 14, 14, 677371)), (368.2049865722656, 22.0, 16.0, datetime.datetime(2020, 12, 7, 14, 15, 15, 696626)), (368.05010986328125, 26.0, 20.0, datetime.datetime(2020, 12, 7, 14, 16, 16, 694172)), (368.2200012207031, 29.0, 12.0, datetime.datetime(2020, 12, 7, 14, 17, 17, 783079)), (368.29998779296875, 23.0, 17.0, datetime.datetime(2020, 12, 7, 14, 18, 18, 836716)), (368.2330017089844, 35.0, 13.0, datetime.datetime(2020, 12, 7, 14, 19, 19, 834019)), (368.2810974121094, 26.0, 10.0, datetime.datetime(2020, 12, 7, 14, 20, 20, 845648)), (368.3299865722656, 33.333333333333336, 8.080808080808081, datetime.datetime(2020, 12, 7, 14, 21, 21, 863111)), (368.32501220703125, 24.0, 17.0, datetime.datetime(2020, 12, 7, 14, 22, 22, 787552)), (368.4100036621094, 25.0, 15.0, datetime.datetime(2020, 12, 7, 14, 23, 23, 714979)), (368.4700012207031, 19.19191919191919, 16.161616161616163, datetime.datetime(2020, 12, 7, 14, 24, 24, 753392)), (368.45001220703125, 23.232323232323232, 15.151515151515152, datetime.datetime(2020, 12, 7, 14, 25, 25, 805619)), (368.44000244140625, 8.0, 20.0, datetime.datetime(2020, 12, 7, 14, 26, 26, 844423)), (368.3900146484375, 29.0, 17.0, datetime.datetime(2020, 12, 7, 14, 27, 27, 977628)), (368.4599914550781, 31.0, 11.0, datetime.datetime(2020, 12, 7, 14, 28, 28, 988715)), (368.3999938964844, 39.0, 10.0, datetime.datetime(2020, 12, 7, 14, 29, 29, 996224)), (368.4800109863281, 22.0, 13.0, datetime.datetime(2020, 12, 7, 14, 30, 31, 89844)), (368.55999755859375, 28.0, 15.0, datetime.datetime(2020, 12, 7, 14, 31, 32, 112357)), (368.57000732421875, 22.68041237113402, 11.34020618556701, datetime.datetime(2020, 12, 7, 14, 32, 33, 103338)), (368.6000061035156, 25.252525252525253, 10.1010101010101, datetime.datetime(2020, 12, 7, 14, 33, 34, 137923)), (368.5450134277344, 26.0, 6.0, datetime.datetime(2020, 12, 7, 14, 34, 35, 181521)), (368.54150390625, 26.262626262626263, 15.151515151515152, datetime.datetime(2020, 12, 7, 14, 35, 36, 109886)), (368.5799865722656, 26.0, 10.0, datetime.datetime(2020, 12, 7, 14, 36, 37, 256937)), (368.6000061035156, 29.0, 11.0, datetime.datetime(2020, 12, 7, 14, 37, 38, 270441)), (368.6300048828125, 27.0, 13.0, datetime.datetime(2020, 12, 7, 14, 38, 39, 261614)), (368.6300048828125, 25.0, 8.0, datetime.datetime(2020, 12, 7, 14, 39, 40, 243424)), (368.6282043457031, 23.0, 13.0, datetime.datetime(2020, 12, 7, 14, 40, 41, 200991)), (368.64898681640625, 30.0, 12.0, datetime.datetime(2020, 12, 7, 14, 41, 42, 203758)), (368.6600036621094, 25.252525252525253, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 42, 43, 234736)), (368.6400146484375, 35.35353535353536, 7.070707070707071, datetime.datetime(2020, 12, 7, 14, 43, 44, 315474)), (368.69000244140625, 25.0, 7.0, datetime.datetime(2020, 12, 7, 14, 44, 45, 309862)), (368.69000244140625, 25.252525252525253, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 45, 46, 373613)), (368.69000244140625, 29.0, 11.0, datetime.datetime(2020, 12, 7, 14, 46, 47, 350075)), (368.6997985839844, 23.0, 17.0, datetime.datetime(2020, 12, 7, 14, 47, 48, 384640)), (368.6900939941406, 31.0, 5.0, datetime.datetime(2020, 12, 7, 14, 48, 49, 554385)), (368.6780090332031, 29.0, 15.0, datetime.datetime(2020, 12, 7, 14, 49, 50, 561947)), (368.6600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 14, 50, 51, 702599)), (368.6449890136719, 26.262626262626263, 11.11111111111111, datetime.datetime(2020, 12, 7, 14, 51, 52, 685388)), (368.69000244140625, 29.292929292929294, 10.1010101010101, datetime.datetime(2020, 12, 7, 14, 52, 53, 653312)), (368.70001220703125, 32.0, 16.0, datetime.datetime(2020, 12, 7, 14, 53, 54, 703617)), (368.6000061035156, 26.262626262626263, 9.090909090909092, datetime.datetime(2020, 12, 7, 14, 54, 55, 736979)), (368.5299987792969, 26.262626262626263, 17.171717171717173, datetime.datetime(2020, 12, 7, 14, 55, 56, 723426)), (368.45001220703125, 27.272727272727273, 7.070707070707071, datetime.datetime(2020, 12, 7, 14, 56, 57, 794477)), (368.5, 31.31313131313131, 17.171717171717173, datetime.datetime(2020, 12, 7, 14, 57, 58, 855998)), (368.4700012207031, 24.0, 14.0, datetime.datetime(2020, 12, 7, 14, 58, 59, 793773)), (368.4100036621094, 27.0, 14.0, datetime.datetime(2020, 12, 7, 15, 0, 0, 906801)), (368.2550048828125, 29.0, 10.0, datetime.datetime(2020, 12, 7, 15, 1, 1, 881838)), (368.3900146484375, 32.0, 13.0, datetime.datetime(2020, 12, 7, 15, 2, 2, 903127)), (368.3399963378906, 28.282828282828284, 8.080808080808081, datetime.datetime(2020, 12, 7, 15, 3, 3, 965007)), (368.4599914550781, 28.0, 17.0, datetime.datetime(2020, 12, 7, 15, 4, 5, 4983)), (368.44000244140625, 23.0, 16.0, datetime.datetime(2020, 12, 7, 15, 5, 6, 49640)), (368.3699951171875, 22.22222222222222, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 6, 7, 57265)), (368.32000732421875, 29.0, 15.0, datetime.datetime(2020, 12, 7, 15, 7, 8, 79468)), (368.30499267578125, 27.551020408163264, 18.367346938775512, datetime.datetime(2020, 12, 7, 15, 8, 9, 80999)), (368.3500061035156, 29.0, 16.0, datetime.datetime(2020, 12, 7, 15, 9, 10, 47496)), (368.32000732421875, 30.612244897959183, 8.16326530612245, datetime.datetime(2020, 12, 7, 15, 10, 10, 982345)), (368.2699890136719, 27.0, 13.0, datetime.datetime(2020, 12, 7, 15, 11, 12, 390243)), (368.3399963378906, 29.0, 9.0, datetime.datetime(2020, 12, 7, 15, 12, 13, 437551)), (368.43499755859375, 24.0, 13.0, datetime.datetime(2020, 12, 7, 15, 13, 14, 384937)), (368.2850036621094, 32.0, 13.0, datetime.datetime(2020, 12, 7, 15, 14, 15, 383927)), (368.3092956542969, 27.0, 16.0, datetime.datetime(2020, 12, 7, 15, 15, 16, 364039)), (368.44000244140625, 29.0, 12.0, datetime.datetime(2020, 12, 7, 15, 16, 17, 409819)), (368.4800109863281, 21.0, 13.0, datetime.datetime(2020, 12, 7, 15, 17, 18, 418943)), (368.5299987792969, 30.303030303030305, 10.1010101010101, datetime.datetime(2020, 12, 7, 15, 18, 19, 451105)), (368.57000732421875, 29.0, 16.0, datetime.datetime(2020, 12, 7, 15, 19, 20, 491450)), (368.6000061035156, 33.333333333333336, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 20, 21, 446492)), (368.6199951171875, 25.0, 12.0, datetime.datetime(2020, 12, 7, 15, 21, 22, 501167)), (368.6300048828125, 33.0, 11.0, datetime.datetime(2020, 12, 7, 15, 22, 23, 589291)), (368.6400146484375, 28.0, 25.0, datetime.datetime(2020, 12, 7, 15, 23, 24, 614203)), (368.6700134277344, 36.734693877551024, 12.244897959183673, datetime.datetime(2020, 12, 7, 15, 24, 25, 625957)), (368.7099914550781, 26.0, 17.0, datetime.datetime(2020, 12, 7, 15, 25, 26, 658742)), (368.7149963378906, 26.0, 15.0, datetime.datetime(2020, 12, 7, 15, 26, 27, 691645)), (368.83648681640625, 23.0, 10.0, datetime.datetime(2020, 12, 7, 15, 27, 28, 723260)), (368.69000244140625, 24.0, 11.0, datetime.datetime(2020, 12, 7, 15, 28, 29, 861352)), (368.7384948730469, 22.22222222222222, 18.181818181818183, datetime.datetime(2020, 12, 7, 15, 29, 30, 957732)), (368.82000732421875, 35.0, 12.0, datetime.datetime(2020, 12, 7, 15, 30, 32, 12348)), (368.8699951171875, 28.0, 12.0, datetime.datetime(2020, 12, 7, 15, 31, 33, 53420)), (368.92999267578125, 34.343434343434346, 12.121212121212121, datetime.datetime(2020, 12, 7, 15, 32, 34, 186659)), (368.885009765625, 30.0, 12.0, datetime.datetime(2020, 12, 7, 15, 33, 35, 237377)), (368.989990234375, 29.0, 18.0, datetime.datetime(2020, 12, 7, 15, 34, 36, 213284)), (368.88409423828125, 25.510204081632654, 12.244897959183673, datetime.datetime(2020, 12, 7, 15, 35, 37, 295015)), (368.9049987792969, 26.0, 17.0, datetime.datetime(2020, 12, 7, 15, 36, 38, 309460)), (368.79998779296875, 26.0, 11.0, datetime.datetime(2020, 12, 7, 15, 37, 39, 284322)), (368.7799987792969, 32.0, 14.0, datetime.datetime(2020, 12, 7, 15, 38, 40, 247947)), (368.7499084472656, 30.0, 11.0, datetime.datetime(2020, 12, 7, 15, 39, 41, 270379)), (368.6400146484375, 22.22222222222222, 11.11111111111111, datetime.datetime(2020, 12, 7, 15, 40, 42, 318962)), (368.489990234375, 26.0, 10.0, datetime.datetime(2020, 12, 7, 15, 41, 43, 315901)), (368.3900146484375, 30.612244897959183, 10.204081632653061, datetime.datetime(2020, 12, 7, 15, 42, 44, 411157)), (368.2200012207031, 27.0, 9.0, datetime.datetime(2020, 12, 7, 15, 43, 45, 395924)), (368.1700134277344, 19.387755102040817, 15.306122448979592, datetime.datetime(2020, 12, 7, 15, 44, 46, 326975)), (368.2850036621094, 16.161616161616163, 8.080808080808081, datetime.datetime(2020, 12, 7, 15, 45, 47, 354889)), (368.1300048828125, 28.8659793814433, 12.371134020618557, datetime.datetime(2020, 12, 7, 15, 46, 48, 408583)), (368.2049865722656, 22.22222222222222, 11.11111111111111, datetime.datetime(2020, 12, 7, 15, 47, 49, 389116)), (367.9601135253906, 29.292929292929294, 18.181818181818183, datetime.datetime(2020, 12, 7, 15, 48, 50, 445351)), (367.84991455078125, 25.252525252525253, 15.151515151515152, datetime.datetime(2020, 12, 7, 15, 49, 51, 711243)), (368.1099853515625, 30.0, 14.0, datetime.datetime(2020, 12, 7, 15, 50, 52, 763641)), (368.260009765625, 22.22222222222222, 9.090909090909092, datetime.datetime(2020, 12, 7, 15, 51, 53, 786926)), (368.44000244140625, 31.0, 17.0, datetime.datetime(2020, 12, 7, 15, 52, 54, 821189)), (368.45001220703125, 16.3265306122449, 13.26530612244898, datetime.datetime(2020, 12, 7, 15, 53, 55, 765758)), (368.70001220703125, 30.303030303030305, 12.121212121212121, datetime.datetime(2020, 12, 7, 15, 54, 56, 760826)), (368.79998779296875, 32.323232323232325, 14.141414141414142, datetime.datetime(2020, 12, 7, 15, 55, 57, 708810)), (368.8999938964844, 26.53061224489796, 13.26530612244898, datetime.datetime(2020, 12, 7, 15, 56, 58, 740121)), (368.8500061035156, 26.262626262626263, 7.070707070707071, datetime.datetime(2020, 12, 7, 15, 57, 59, 748958)), (369.0350036621094, 29.896907216494846, 12.371134020618557, datetime.datetime(2020, 12, 7, 15, 59, 0, 831982)), (369.1400146484375, 26.262626262626263, 7.070707070707071, datetime.datetime(2020, 12, 7, 16, 0, 1, 907402)), (369.1600036621094, 33.0, 13.0, datetime.datetime(2020, 12, 7, 16, 1, 2, 860018)), (369.1600036621094, 30.0, 9.0, datetime.datetime(2020, 12, 7, 16, 2, 4, 110944)), (369.1600036621094, 23.46938775510204, 14.285714285714286, datetime.datetime(2020, 12, 7, 16, 3, 5, 75344)), (369.1600036621094, 22.0, 13.0, datetime.datetime(2020, 12, 7, 16, 4, 6, 161917)), (369.1600036621094, 21.0, 14.0, datetime.datetime(2020, 12, 7, 16, 5, 7, 70858)), (369.1600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 6, 7, 970758)), (369.1600036621094, 14.141414141414142, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 7, 8, 921568)), (369.1600036621094, 23.0, 7.0, datetime.datetime(2020, 12, 7, 16, 8, 9, 960196)), (369.1600036621094, 27.0, 15.0, datetime.datetime(2020, 12, 7, 16, 9, 10, 987837)), (369.1600036621094, 24.242424242424242, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 10, 12, 98382)), (369.1600036621094, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 11, 13, 10515)), (369.1600036621094, 20.0, 16.0, datetime.datetime(2020, 12, 7, 16, 12, 13, 938904)), (369.1600036621094, 20.0, 12.0, datetime.datetime(2020, 12, 7, 16, 13, 14, 891605)), (369.1600036621094, 25.0, 14.0, datetime.datetime(2020, 12, 7, 16, 14, 15, 949213)), (369.1600036621094, 29.896907216494846, 9.278350515463918, datetime.datetime(2020, 12, 7, 16, 15, 17, 11036)), (369.1600036621094, 20.0, 21.0, datetime.datetime(2020, 12, 7, 16, 16, 17, 997304)), (369.1600036621094, 22.0, 10.0, datetime.datetime(2020, 12, 7, 16, 17, 19, 98855)), (369.1600036621094, 25.0, 12.0, datetime.datetime(2020, 12, 7, 16, 18, 20, 266107)), (369.1600036621094, 27.0, 7.0, datetime.datetime(2020, 12, 7, 16, 19, 21, 278994)), (369.1600036621094, 19.0, 12.0, datetime.datetime(2020, 12, 7, 16, 20, 22, 200251)), (369.1600036621094, 26.262626262626263, 21.21212121212121, datetime.datetime(2020, 12, 7, 16, 21, 23, 278095)), (369.1600036621094, 17.171717171717173, 13.131313131313131, datetime.datetime(2020, 12, 7, 16, 22, 24, 286313)), (369.1600036621094, 25.0, 12.0, datetime.datetime(2020, 12, 7, 16, 23, 25, 290077)), (369.1600036621094, 25.0, 17.0, datetime.datetime(2020, 12, 7, 16, 24, 26, 332093)), (369.1600036621094, 25.510204081632654, 16.3265306122449, datetime.datetime(2020, 12, 7, 16, 25, 27, 412159)), (369.0899963378906, 22.22222222222222, 15.151515151515152, datetime.datetime(2020, 12, 7, 16, 26, 28, 444416)), (369.0899963378906, 32.0, 15.0, datetime.datetime(2020, 12, 7, 16, 27, 29, 636960)), (369.0899963378906, 24.489795918367346, 9.183673469387756, datetime.datetime(2020, 12, 7, 16, 28, 30, 703812)), (369.0899963378906, 30.0, 16.0, datetime.datetime(2020, 12, 7, 16, 29, 31, 804883)), (369.0899963378906, 25.0, 19.0, datetime.datetime(2020, 12, 7, 16, 30, 32, 742894)), (369.0899963378906, 25.0, 8.0, datetime.datetime(2020, 12, 7, 16, 31, 33, 857808)), (369.0899963378906, 25.0, 14.0, datetime.datetime(2020, 12, 7, 16, 32, 34, 898879)), (369.0899963378906, 30.0, 16.0, datetime.datetime(2020, 12, 7, 16, 33, 35, 996491)), (369.0899963378906, 24.0, 17.0, datetime.datetime(2020, 12, 7, 16, 34, 37, 59815)), (369.0899963378906, 23.46938775510204, 11.224489795918368, datetime.datetime(2020, 12, 7, 16, 35, 38, 144391)), (369.0899963378906, 23.0, 15.0, datetime.datetime(2020, 12, 7, 16, 36, 39, 192686)), (369.0899963378906, 32.0, 11.0, datetime.datetime(2020, 12, 7, 16, 37, 40, 200093)), (369.0899963378906, 26.0, 11.0, datetime.datetime(2020, 12, 7, 16, 38, 41, 186500)), (369.0899963378906, 23.0, 17.0, datetime.datetime(2020, 12, 7, 16, 39, 42, 268368)), (369.0899963378906, 22.0, 15.0, datetime.datetime(2020, 12, 7, 16, 40, 43, 341423)), (369.0899963378906, 29.0, 15.0, datetime.datetime(2020, 12, 7, 16, 41, 44, 466645)), (369.0899963378906, 27.0, 13.0, datetime.datetime(2020, 12, 7, 16, 42, 45, 531457)), (369.0899963378906, 34.0, 11.0, datetime.datetime(2020, 12, 7, 16, 43, 46, 575984)), (369.0899963378906, 27.0, 15.0, datetime.datetime(2020, 12, 7, 16, 44, 47, 641356)), (369.0899963378906, 24.0, 14.0, datetime.datetime(2020, 12, 7, 16, 45, 48, 646570)), (369.0899963378906, 24.0, 14.0, datetime.datetime(2020, 12, 7, 16, 46, 49, 673039)), (369.0899963378906, 24.242424242424242, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 47, 50, 781928)), (369.0899963378906, 24.0, 13.0, datetime.datetime(2020, 12, 7, 16, 48, 51, 740728)), (369.0899963378906, 28.571428571428573, 14.285714285714286, datetime.datetime(2020, 12, 7, 16, 49, 52, 736233)), (369.0899963378906, 34.69387755102041, 19.387755102040817, datetime.datetime(2020, 12, 7, 16, 50, 53, 778138)), (369.0899963378906, 31.632653061224488, 20.408163265306122, datetime.datetime(2020, 12, 7, 16, 51, 54, 836311)), (369.0899963378906, 32.323232323232325, 14.141414141414142, datetime.datetime(2020, 12, 7, 16, 52, 55, 844805)), (369.0899963378906, 27.835051546391753, 7.216494845360825, datetime.datetime(2020, 12, 7, 16, 53, 56, 876442)), (369.0899963378906, 27.272727272727273, 18.181818181818183, datetime.datetime(2020, 12, 7, 16, 54, 57, 845768)), (369.0899963378906, 29.591836734693878, 13.26530612244898, datetime.datetime(2020, 12, 7, 16, 55, 58, 863486)), (369.0899963378906, 27.272727272727273, 11.11111111111111, datetime.datetime(2020, 12, 7, 16, 56, 59, 871781)), (369.0899963378906, 31.31313131313131, 10.1010101010101, datetime.datetime(2020, 12, 7, 16, 58, 0, 917854)), (369.0899963378906, 26.31578947368421, 12.631578947368421, datetime.datetime(2020, 12, 7, 16, 59, 1, 954829)), (369.0899963378906, 22.68041237113402, 10.309278350515465, datetime.datetime(2020, 12, 7, 17, 0, 3, 118357)), (369.0899963378906, 26.0, 13.0, datetime.datetime(2020, 12, 7, 17, 1, 4, 114889)), (369.0899963378906, 30.612244897959183, 17.346938775510203, datetime.datetime(2020, 12, 7, 17, 2, 5, 166690)), (369.0899963378906, 26.262626262626263, 10.1010101010101, datetime.datetime(2020, 12, 7, 17, 3, 6, 188888)), (369.0899963378906, 26.804123711340207, 14.43298969072165, datetime.datetime(2020, 12, 7, 17, 4, 7, 224058)), (369.0899963378906, 19.0, 15.0, datetime.datetime(2020, 12, 7, 17, 5, 8, 240998)), (369.0899963378906, 34.69387755102041, 7.142857142857143, datetime.datetime(2020, 12, 7, 17, 6, 9, 268729)), (369.0899963378906, 32.0, 4.0, datetime.datetime(2020, 12, 7, 17, 7, 10, 427563)), (369.0899963378906, 30.0, 9.0, datetime.datetime(2020, 12, 7, 17, 8, 11, 421058)), (369.0899963378906, 26.262626262626263, 8.080808080808081, datetime.datetime(2020, 12, 7, 17, 9, 12, 388790)), (369.0899963378906, 32.6530612244898, 8.16326530612245, datetime.datetime(2020, 12, 7, 17, 10, 13, 301013)), (369.0899963378906, 26.53061224489796, 9.183673469387756, datetime.datetime(2020, 12, 7, 17, 11, 14, 402722)), (369.0899963378906, 22.22222222222222, 14.141414141414142, datetime.datetime(2020, 12, 7, 17, 12, 15, 608448)), (369.0899963378906, 23.232323232323232, 18.181818181818183, datetime.datetime(2020, 12, 7, 17, 13, 16, 725467)), (369.0899963378906, 16.3265306122449, 19.387755102040817, datetime.datetime(2020, 12, 7, 17, 14, 17, 755780)), (369.0899963378906, 25.0, 7.0, datetime.datetime(2020, 12, 7, 17, 15, 18, 749056)), (369.0899963378906, 25.510204081632654, 11.224489795918368, datetime.datetime(2020, 12, 7, 17, 16, 20, 502978)), (369.0899963378906, 25.252525252525253, 13.131313131313131, datetime.datetime(2020, 12, 7, 17, 17, 21, 580367))]


Positive tweets:
@WordswithSteph Frankly, I have absolutely no sympathy for the science denying Republicans that get the Covid19 vir… https://t.co/bVxvfKL3qX
RT @SK_SheCAN: Pay doctors. Kill BBI. 

But until the deaths start hitting close to home.
Maybe we will never get serious about COVID19 🤯🤯🤯
RT @GermHunterMD: This is extremely disturbing... this should never ever happen. A data scientist's home is raided and she is arrested at g…
RT @palazzo214: @GeoRebekah Trump is a petulant man-child who would have the world destroyed around him as long as he gets his way. Everyth…
COVID-19 Vaccine Bombshell: FDA Documents Reveal DEATH + 21 Serious Conditions As Possible Adverse Outcomes… https://t.co/5ffDaFOrlZ
RT @askboomer1949: When politics shut down common freaking sense: #RepublicanParty quest for total, perpetual rule.
#COVID19 #coronavirusUS…
How start-ups see the future of remote work #Startup #ux via https://t.co/uYrZyCEzyT https://t.co/UH0slTnDvh
@Nerdy_byNature I missed it, too. 

HOWEVER

My cousin, just a few days ago, said AIDS is man-made. Previously used… https://t.co/LIXM0nURgy
RT @TheLancet: "Lockdowns are last resort measures that reflect a failure of the pandemic control strategy." In this Correspondence, Deepti…
RT @berniespofforth: Not one politician, not one mayor and not one council worker, has been paid a penny less than normal throughout lockdo…


Negative tweets:
@WordswithSteph Frankly, I have absolutely no sympathy for the science denying Republicans that get the Covid19 vir… https://t.co/bVxvfKL3qX
RT @SK_SheCAN: Pay doctors. Kill BBI. 

But until the deaths start hitting close to home.
Maybe we will never get serious about COVID19 🤯🤯🤯
RT @GermHunterMD: This is extremely disturbing... this should never ever happen. A data scientist's home is raided and she is arrested at g…
RT @palazzo214: @GeoRebekah Trump is a petulant man-child who would have the world destroyed around him as long as he gets his way. Everyth…
COVID-19 Vaccine Bombshell: FDA Documents Reveal DEATH + 21 Serious Conditions As Possible Adverse Outcomes… https://t.co/5ffDaFOrlZ
RT @askboomer1949: When politics shut down common freaking sense: #RepublicanParty quest for total, perpetual rule.
#COVID19 #coronavirusUS…
How start-ups see the future of remote work #Startup #ux via https://t.co/uYrZyCEzyT https://t.co/UH0slTnDvh
@Nerdy_byNature I missed it, too. 

HOWEVER

My cousin, just a few days ago, said AIDS is man-made. Previously used… https://t.co/LIXM0nURgy
RT @TheLancet: "Lockdowns are last resort measures that reflect a failure of the pandemic control strategy." In this Correspondence, Deepti…
RT @berniespofforth: Not one politician, not one mayor and not one council worker, has been paid a penny less than normal throughout lockdo…
(base) adamkratch@MacBook-Pro ArtsNCrafts % 
